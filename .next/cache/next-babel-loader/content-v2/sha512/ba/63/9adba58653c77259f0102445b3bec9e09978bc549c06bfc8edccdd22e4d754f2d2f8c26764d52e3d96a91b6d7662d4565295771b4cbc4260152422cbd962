{"ast":null,"code":"import _defineProperty from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/SectionForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { htmlToReact, markdownify } from '../utils';\nimport FormField from './FormField';\n\nvar SectionForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(SectionForm, _React$Component);\n\n  var _super = _createSuper(SectionForm);\n\n  function SectionForm() {\n    _classCallCheck(this, SectionForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SectionForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var section = _.get(this.props, 'section');\n\n      var sectionId = _.get(section, 'section_id');\n\n      var title = _.get(section, 'title');\n\n      var subtitle = _.get(section, 'subtitle');\n\n      var content = _.get(section, 'content');\n\n      var formId = _.get(section, 'form_id');\n\n      var formAction = _.get(section, 'form_action');\n\n      var formFields = _.get(section, 'form_fields');\n\n      var submitLabel = _.get(section, 'submit_label');\n\n      var formHoneypotInputId = formId + '-honeypot';\n      var formHoneypotLabelId = formId + '-honeypot-label';\n      var formHoneypotName = formId + '-bot-field';\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: sectionId,\n        className: \"block block-form outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header inner-sm\",\n            children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"block-title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 39\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"block-subtitle\",\n              children: htmlToReact(subtitle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content inner-sm\",\n            children: [content && markdownify(content), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n              name: formId,\n              id: formId\n            }, formAction ? {\n              action: formAction\n            } : null), {}, {\n              method: \"POST\",\n              \"data-netlify\": \"true\",\n              \"data-netlify-honeypot\": formHoneypotName,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"screen-reader-text\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  id: formHoneypotLabelId,\n                  htmlFor: formHoneypotInputId,\n                  children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    \"aria-labelledby\": formHoneypotLabelId,\n                    id: formHoneypotInputId,\n                    name: formHoneypotName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"form-name\",\n                value: formId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), _.map(formFields, function (field, index) {\n                return /*#__PURE__*/_jsxDEV(FormField, _objectSpread(_objectSpread({}, _this.props), {}, {\n                  field: field\n                }), index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 66\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-submit\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"button\",\n                  children: submitLabel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }), void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SectionForm;\n}(React.Component);\n\nexport { SectionForm as default };","map":{"version":3,"sources":["/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/SectionForm.js"],"names":["React","_","htmlToReact","markdownify","FormField","SectionForm","section","get","props","sectionId","title","subtitle","content","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEqBC,W;;;;;;;;;;;;;6BACR;AAAA;;AACL,UAAMC,OAAO,GAAGL,CAAC,CAACM,GAAF,CAAM,KAAKC,KAAX,EAAkB,SAAlB,CAAhB;;AACA,UAAMC,SAAS,GAAGR,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,YAAf,CAAlB;;AACA,UAAMI,KAAK,GAAGT,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,OAAf,CAAd;;AACA,UAAMK,QAAQ,GAAGV,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,UAAf,CAAjB;;AACA,UAAMM,OAAO,GAAGX,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,SAAf,CAAhB;;AACA,UAAMO,MAAM,GAAGZ,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,SAAf,CAAf;;AACA,UAAMQ,UAAU,GAAGb,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,aAAf,CAAnB;;AACA,UAAMS,UAAU,GAAGd,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,aAAf,CAAnB;;AACA,UAAMU,WAAW,GAAGf,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,cAAf,CAApB;;AACA,UAAMW,mBAAmB,GAAGJ,MAAM,GAAG,WAArC;AACA,UAAMK,mBAAmB,GAAGL,MAAM,GAAG,iBAArC;AACA,UAAMM,gBAAgB,GAAGN,MAAM,GAAG,YAAlC;AAEA,0BACI;AAAS,QAAA,EAAE,EAAEJ,SAAb;AAAwB,QAAA,SAAS,EAAC,wBAAlC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,qBACC,CAACC,KAAK,IAAIC,QAAV,kBACO;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,uBACKD,KAAK,iBAAI;AAAI,cAAA,SAAS,EAAC,sBAAd;AAAA,wBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,oBADd,EAEKC,QAAQ,iBAAI;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+BT,WAAW,CAACS,QAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAOI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,uBACKC,OAAO,IAAIT,WAAW,CAACS,OAAD,CAD3B,eAEI;AACI,cAAA,IAAI,EAAEC,MADV;AAEI,cAAA,EAAE,EAAEA;AAFR,eAGSC,UAAU,GAAI;AAAEM,cAAAA,MAAM,EAAEN;AAAV,aAAJ,GAA8B,IAHjD;AAII,cAAA,MAAM,EAAC,MAJX;AAKI,8BAAa,MALjB;AAMI,uCAAuBK,gBAN3B;AAAA,sCAQI;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACI;AAAO,kBAAA,EAAE,EAAED,mBAAX;AAAgC,kBAAA,OAAO,EAAED,mBAAzC;AAAA,kFAEI;AAAO,uCAAiBC,mBAAxB;AAA6C,oBAAA,EAAE,EAAED,mBAAjD;AAAsE,oBAAA,IAAI,EAAEE;AAA5E;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBARJ,eAcI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,IAAI,EAAC,WAA1B;AAAsC,gBAAA,KAAK,EAAEN;AAA7C;AAAA;AAAA;AAAA;AAAA,sBAdJ,EAeKZ,CAAC,CAACoB,GAAF,CAAMN,UAAN,EAAkB,UAACO,KAAD,EAAQC,KAAR;AAAA,oCAAkB,QAAC,SAAD,kCAA2B,KAAI,CAACf,KAAhC;AAAuC,kBAAA,KAAK,EAAEc;AAA9C,oBAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,yBAAlB;AAAA,eAAlB,CAfL,eAgBI;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,QAAhC;AAAA,4BAA0CP;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAmCH;;;;EAlDoChB,KAAK,CAACwB,S;;SAA1BnB,W","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { htmlToReact, markdownify } from '../utils';\nimport FormField from './FormField';\n\nexport default class SectionForm extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const content = _.get(section, 'content');\n        const formId = _.get(section, 'form_id');\n        const formAction = _.get(section, 'form_action');\n        const formFields = _.get(section, 'form_fields');\n        const submitLabel = _.get(section, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <section id={sectionId} className=\"block block-form outer\">\n                <div className=\"inner\">\n                {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    <div className=\"block-content inner-sm\">\n                        {content && markdownify(content)}\n                        <form\n                            name={formId}\n                            id={formId}\n                            {...(formAction ? ({ action: formAction }) : null)}\n                            method=\"POST\"\n                            data-netlify=\"true\"\n                            data-netlify-honeypot={formHoneypotName}\n                        >\n                            <div className=\"screen-reader-text\">\n                                <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                    Don't fill this out if you're human:\n                                    <input aria-labelledby={formHoneypotLabelId} id={formHoneypotInputId} name={formHoneypotName} />\n                                </label>\n                            </div>\n                            <input type=\"hidden\" name=\"form-name\" value={formId} />\n                            {_.map(formFields, (field, index) => <FormField key={index} {...this.props} field={field} />)}\n                            <div className=\"form-submit\">\n                                <button type=\"submit\" className=\"button\">{submitLabel}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}