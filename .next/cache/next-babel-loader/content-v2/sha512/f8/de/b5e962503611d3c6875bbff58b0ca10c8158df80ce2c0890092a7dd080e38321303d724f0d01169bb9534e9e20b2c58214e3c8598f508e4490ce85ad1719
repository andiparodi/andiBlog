{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/components/Header.js\";\nimport React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.handleRouteChange = this.handleRouteChange.bind(this);\n    this.menuOpenRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize, true);\n    Router.events.on('routeChangeStart', this.handleRouteChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize, true);\n    Router.events.off('routeChangeStart', this.handleRouteChange);\n  }\n\n  handleWindowResize() {\n    const menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n\n    if (menuOpenElm === null) {\n      document.body.classList.remove('menu--opened');\n    }\n  }\n\n  handleRouteChange() {\n    document.body.classList.remove('menu--opened');\n  }\n\n  handleMenuToggle(event) {\n    event.preventDefault();\n    document.body.classList.toggle('menu--opened');\n  }\n\n  renderNavLinks(navLinks, pageUrl) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"menu-open\",\n        className: \"menu-toggle\",\n        ref: this.menuOpenRef,\n        onClick: this.handleMenuToggle.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"screen-reader-text\",\n          children: \"Open Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 130\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon-menu\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 183\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"main-navigation\",\n        className: \"site-navigation\",\n        \"aria-label\": \"Main Navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"site-nav-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"menu-close\",\n            className: \"menu-toggle\",\n            onClick: this.handleMenuToggle.bind(this),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"screen-reader-text\",\n              children: \"Close Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 116\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-close\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 170\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"menu\",\n            children: _.map(navLinks, (action, index) => {\n              const actionUrl = _.trim(_.get(action, 'url'), '/');\n\n              const actionStyle = _.get(action, 'style', 'link');\n\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: classNames('menu-item', {\n                  'current-menu-item': pageUrl === actionUrl,\n                  'menu-button': actionStyle !== 'link'\n                }),\n                children: /*#__PURE__*/_jsxDEV(Action, {\n                  action: action\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const page = _.get(this.props, 'page');\n\n    const pageUrl = _.trim(getPageUrl(page), '/');\n\n    const config = _.get(this.props, 'config');\n\n    const header = _.get(config, 'header');\n\n    const logo = _.get(header, 'logo_img');\n\n    const logoAlt = _.get(header, 'logo_img_alt', '');\n\n    const title = _.get(header, 'title');\n\n    const hasNav = _.get(header, 'has_nav');\n\n    const navLinks = _.get(header, 'nav_links');\n\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"masthead\",\n      className: \"site-header outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"site-header-inside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"site-branding\",\n            children: logo ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"site-logo\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: withPrefix('/'),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: withPrefix(logo),\n                  alt: logoAlt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 91\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"site-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: withPrefix('/'),\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), hasNav && !_.isEmpty(navLinks) && this.renderNavLinks(navLinks, pageUrl)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/components/Header.js"],"names":["React","Router","_","Link","withPrefix","classNames","getPageUrl","Action","Header","Component","constructor","props","handleWindowResize","bind","handleRouteChange","menuOpenRef","createRef","componentDidMount","window","addEventListener","events","on","componentWillUnmount","removeEventListener","off","menuOpenElm","get","document","body","classList","remove","handleMenuToggle","event","preventDefault","toggle","renderNavLinks","navLinks","pageUrl","map","action","index","actionUrl","trim","actionStyle","render","page","config","header","logo","logoAlt","title","hasNav","isEmpty"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAyD,UAAzD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,WAAL,gBAAmBf,KAAK,CAACgB,SAAN,EAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKP,kBAAvC,EAA2D,IAA3D;AACAX,IAAAA,MAAM,CAACmB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKP,iBAA1C;AACH;;AAEDQ,EAAAA,oBAAoB,GAAG;AACnBJ,IAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqC,KAAKX,kBAA1C,EAA8D,IAA9D;AACAX,IAAAA,MAAM,CAACmB,MAAP,CAAcI,GAAd,CAAkB,kBAAlB,EAAsC,KAAKV,iBAA3C;AACH;;AAEDF,EAAAA,kBAAkB,GAAG;AACjB,UAAMa,WAAW,GAAGvB,CAAC,CAACwB,GAAF,CAAM,KAAKX,WAAX,EAAwB,sBAAxB,CAApB;;AACA,QAAIU,WAAW,KAAK,IAApB,EAA0B;AACtBE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,cAA/B;AACH;AACJ;;AAEDhB,EAAAA,iBAAiB,GAAG;AAChBa,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,cAA/B;AACH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBK,MAAxB,CAA+B,cAA/B;AACH;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAWC,OAAX,EAAoB;AAC9B,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,SAAS,EAAC,aAAjC;AAA+C,QAAA,GAAG,EAAE,KAAKtB,WAAzD;AAAsE,QAAA,OAAO,EAAE,KAAKgB,gBAAL,CAAsBlB,IAAtB,CAA2B,IAA3B,CAA/E;AAAA,gCAAiH;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjH,eAAsK;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,yBAAY;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAAtK;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAA0B,QAAA,SAAS,EAAC,iBAApC;AAAsD,sBAAW,iBAAjE;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAQ,YAAA,EAAE,EAAC,YAAX;AAAwB,YAAA,SAAS,EAAC,aAAlC;AAAgD,YAAA,OAAO,EAAE,KAAKkB,gBAAL,CAAsBlB,IAAtB,CAA2B,IAA3B,CAAzD;AAAA,oCAA2F;AAAM,cAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3F,eAAiJ;AAAM,cAAA,SAAS,EAAC,YAAhB;AAA6B,6BAAY;AAAzC;AAAA;AAAA;AAAA;AAAA,oBAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBACKX,CAAC,CAACoC,GAAF,CAAMF,QAAN,EAAgB,CAACG,MAAD,EAASC,KAAT,KAAmB;AAChC,oBAAMC,SAAS,GAAGvC,CAAC,CAACwC,IAAF,CAAOxC,CAAC,CAACwB,GAAF,CAAMa,MAAN,EAAc,KAAd,CAAP,EAA6B,GAA7B,CAAlB;;AACA,oBAAMI,WAAW,GAAGzC,CAAC,CAACwB,GAAF,CAAMa,MAAN,EAAc,OAAd,EAAuB,MAAvB,CAApB;;AACA,kCACI;AAEI,gBAAA,SAAS,EAAElC,UAAU,CAAC,WAAD,EAAc;AAC/B,uCAAqBgC,OAAO,KAAKI,SADF;AAE/B,iCAAeE,WAAW,KAAK;AAFA,iBAAd,CAFzB;AAAA,uCAOI,QAAC,MAAD;AAAQ,kBAAA,MAAM,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA;AAPJ,iBACSC,KADT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAWH,aAdA;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG3C,CAAC,CAACwB,GAAF,CAAM,KAAKf,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAM0B,OAAO,GAAGnC,CAAC,CAACwC,IAAF,CAAOpC,UAAU,CAACuC,IAAD,CAAjB,EAAyB,GAAzB,CAAhB;;AACA,UAAMC,MAAM,GAAG5C,CAAC,CAACwB,GAAF,CAAM,KAAKf,KAAX,EAAkB,QAAlB,CAAf;;AACA,UAAMoC,MAAM,GAAG7C,CAAC,CAACwB,GAAF,CAAMoB,MAAN,EAAc,QAAd,CAAf;;AACA,UAAME,IAAI,GAAG9C,CAAC,CAACwB,GAAF,CAAMqB,MAAN,EAAc,UAAd,CAAb;;AACA,UAAME,OAAO,GAAG/C,CAAC,CAACwB,GAAF,CAAMqB,MAAN,EAAc,cAAd,EAA8B,EAA9B,CAAhB;;AACA,UAAMG,KAAK,GAAGhD,CAAC,CAACwB,GAAF,CAAMqB,MAAN,EAAc,OAAd,CAAd;;AACA,UAAMI,MAAM,GAAGjD,CAAC,CAACwB,GAAF,CAAMqB,MAAN,EAAc,SAAd,CAAf;;AACA,UAAMX,QAAQ,GAAGlC,CAAC,CAACwB,GAAF,CAAMqB,MAAN,EAAc,WAAd,CAAjB;;AAEA,wBACI;AAAQ,MAAA,EAAE,EAAC,UAAX;AAAsB,MAAA,SAAS,EAAC,mBAAhC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBACKC,IAAI,gBAAG;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,qCAAyB,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAE5C,UAAU,CAAC,GAAD,CAAtB;AAAA,uCAA6B;AAAK,kBAAA,GAAG,EAAEA,UAAU,CAAC4C,IAAD,CAApB;AAA4B,kBAAA,GAAG,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAAH,gBACC;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,qCAA0B,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAE7C,UAAU,CAAC,GAAD,CAAtB;AAAA,0BAA8B8C;AAA9B;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKKC,MAAM,IAAI,CAACjD,CAAC,CAACkD,OAAF,CAAUhB,QAAV,CAAX,IAAkC,KAAKD,cAAL,CAAoBC,QAApB,EAA8BC,OAA9B,CALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAxF+C","sourcesContent":["import React from 'react';\nimport Router from 'next/router';\nimport _ from 'lodash';\n\nimport { Link, withPrefix, classNames, getPageUrl } from '../utils';\nimport Action from './Action';\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.handleRouteChange = this.handleRouteChange.bind(this);\n        this.menuOpenRef = React.createRef();\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleWindowResize, true);\n        Router.events.on('routeChangeStart', this.handleRouteChange);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize, true);\n        Router.events.off('routeChangeStart', this.handleRouteChange);\n    }\n\n    handleWindowResize() {\n        const menuOpenElm = _.get(this.menuOpenRef, 'current.offsetParent');\n        if (menuOpenElm === null) {\n            document.body.classList.remove('menu--opened');\n        }\n    }\n\n    handleRouteChange() {\n        document.body.classList.remove('menu--opened');\n    }\n\n    handleMenuToggle(event) {\n        event.preventDefault();\n        document.body.classList.toggle('menu--opened');\n    }\n\n    renderNavLinks(navLinks, pageUrl) {\n        return (\n            <React.Fragment>\n                <button id=\"menu-open\" className=\"menu-toggle\" ref={this.menuOpenRef} onClick={this.handleMenuToggle.bind(this)}><span className=\"screen-reader-text\">Open Menu</span><span className=\"icon-menu\" aria-hidden=\"true\" /></button>\n                <nav id=\"main-navigation\" className=\"site-navigation\" aria-label=\"Main Navigation\">\n                    <div className=\"site-nav-inside\">\n                        <button id=\"menu-close\" className=\"menu-toggle\" onClick={this.handleMenuToggle.bind(this)}><span className=\"screen-reader-text\">Close Menu</span><span className=\"icon-close\" aria-hidden=\"true\" /></button>\n                        <ul className=\"menu\">\n                            {_.map(navLinks, (action, index) => {\n                                const actionUrl = _.trim(_.get(action, 'url'), '/');\n                                const actionStyle = _.get(action, 'style', 'link');\n                                return (\n                                    <li\n                                        key={index}\n                                        className={classNames('menu-item', {\n                                            'current-menu-item': pageUrl === actionUrl,\n                                            'menu-button': actionStyle !== 'link'\n                                        })}\n                                    >\n                                        <Action action={action} />\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                </nav>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const page = _.get(this.props, 'page');\n        const pageUrl = _.trim(getPageUrl(page), '/');\n        const config = _.get(this.props, 'config');\n        const header = _.get(config, 'header');\n        const logo = _.get(header, 'logo_img');\n        const logoAlt = _.get(header, 'logo_img_alt', '');\n        const title = _.get(header, 'title');\n        const hasNav = _.get(header, 'has_nav');\n        const navLinks = _.get(header, 'nav_links');\n\n        return (\n            <header id=\"masthead\" className=\"site-header outer\">\n                <div className=\"inner\">\n                    <div className=\"site-header-inside\">\n                        <div className=\"site-branding\">\n                            {logo ? <p className=\"site-logo\"><Link href={withPrefix('/')}><img src={withPrefix(logo)} alt={logoAlt} /></Link></p>\n                                : <p className=\"site-title\"><Link href={withPrefix('/')}>{title}</Link></p>}\n                        </div>\n                        {hasNav && !_.isEmpty(navLinks) && this.renderNavLinks(navLinks, pageUrl)}\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}