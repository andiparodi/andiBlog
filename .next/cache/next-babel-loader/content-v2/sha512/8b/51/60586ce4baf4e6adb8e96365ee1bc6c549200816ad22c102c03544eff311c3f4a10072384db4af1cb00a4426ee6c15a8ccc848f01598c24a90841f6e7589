{"ast":null,"code":"import _defineProperty from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/FormField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\n\nvar FormField = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormField, _React$Component);\n\n  var _super = _createSuper(FormField);\n\n  function FormField() {\n    _classCallCheck(this, FormField);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FormField, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var field = _.get(this.props, 'field');\n\n      var inputType = _.get(field, 'input_type');\n\n      var name = _.get(field, 'name');\n\n      var defaultValue = _.get(field, 'default_value');\n\n      var options = _.get(field, 'options');\n\n      var required = _.get(field, 'is_required');\n\n      var label = _.get(field, 'label');\n\n      var labelId = \"\".concat(name, \"-label\");\n      var attr = {};\n\n      if (label) {\n        attr['aria-labelledby'] = labelId;\n      }\n\n      if (required) {\n        attr.required = true;\n      }\n\n      switch (inputType) {\n        case 'checkbox':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n              type: \"checkbox\",\n              id: name,\n              name: name\n            }, attr), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), label && /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: name,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this);\n\n        case 'select':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: name,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-select-wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", _objectSpread(_objectSpread({\n                id: name,\n                name: name\n              }, attr), {}, {\n                children: [defaultValue && /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: defaultValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 50\n                }, this), _.map(options, function (option, index) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 37\n                  }, _this);\n                })]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this);\n\n        case 'textarea':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: name,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", _objectSpread(_objectSpread({\n              name: name,\n              id: name,\n              rows: \"5\"\n            }, defaultValue ? {\n              placeholder: defaultValue\n            } : null), attr), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"animate-border\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: name,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n              type: inputType,\n              name: name,\n              id: name\n            }, defaultValue ? {\n              placeholder: defaultValue\n            } : null), attr), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"animate-border\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this);\n      }\n    }\n  }]);\n\n  return FormField;\n}(React.Component);\n\nexport { FormField as default };","map":{"version":3,"sources":["/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/FormField.js"],"names":["React","_","FormField","field","get","props","inputType","name","defaultValue","options","required","label","labelId","attr","map","option","index","placeholder","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nexport default class FormField extends React.Component {\n    render() {\n        const field = _.get(this.props, 'field');\n        const inputType = _.get(field, 'input_type');\n        const name = _.get(field, 'name');\n        const defaultValue = _.get(field, 'default_value');\n        const options = _.get(field, 'options');\n        const required = _.get(field, 'is_required');\n        const label = _.get(field, 'label');\n        const labelId = `${name}-label`;\n        const attr = {};\n        if (label) {\n            attr['aria-labelledby'] = labelId;\n        }\n        if (required) {\n            attr.required = true;\n        }\n\n        switch (inputType) {\n            case 'checkbox':\n                return (\n                    <div className=\"form-group form-checkbox\">\n                        <input type=\"checkbox\" id={name} name={name} {...attr} />\n                        {label && <label htmlFor={name}>{label}</label>}\n                    </div>\n                );\n            case 'select':\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name}>{label}</label>}\n                        <div className=\"form-select-wrap\">\n                            <select id={name} name={name} {...attr}>\n                                {defaultValue && <option value=\"\">{defaultValue}</option>}\n                                {_.map(options, (option, index) => (\n                                    <option key={index} value={option}>{option}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                );\n            case 'textarea':\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name}>{label}</label>}\n                        <textarea name={name} id={name} rows=\"5\" {...(defaultValue ? { placeholder: defaultValue } : null)} {...attr} />\n                        <span className=\"animate-border\" aria-hidden=\"true\" />\n                    </div>\n                );\n            default:\n                return (\n                    <div className=\"form-group\">\n                        {label && <label htmlFor={name}>{label}</label>}\n                        <input type={inputType} name={name} id={name} {...(defaultValue ? { placeholder: defaultValue } : null)} {...attr} />\n                        <span className=\"animate-border\" aria-hidden=\"true\" />\n                    </div>\n                );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}