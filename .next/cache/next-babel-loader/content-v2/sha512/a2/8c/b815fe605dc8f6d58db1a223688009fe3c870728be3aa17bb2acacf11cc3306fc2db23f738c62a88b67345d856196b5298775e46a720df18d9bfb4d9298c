{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionPosts.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { getPageUrl, htmlToReact, classNames, Link, withPrefix } from '../utils';\nimport CtaButtons from './CtaButtons';\nexport default class SectionPosts extends React.Component {\n  renderPost(post, index) {\n    const title = _.get(post, 'title');\n\n    const thumbImage = _.get(post, 'thumb_image');\n\n    const thumbImageAlt = _.get(post, 'thumb_image_alt', '');\n\n    const excerpt = _.get(post, 'excerpt');\n\n    const date = _.get(post, 'date');\n\n    const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n    const formattedDate = moment(date).strftime('%B %d, %Y');\n    const postUrl = getPageUrl(post, {\n      withPrefix: true\n    });\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"post grid-item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-inside\",\n        children: [thumbImage && /*#__PURE__*/_jsxDEV(Link, {\n          className: \"post-thumbnail\",\n          href: postUrl,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: withPrefix(thumbImage),\n            alt: thumbImageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"post-title\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: postUrl,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-meta\",\n            children: /*#__PURE__*/_jsxDEV(\"time\", {\n              className: \"published\",\n              dateTime: dateTimeAttr,\n              children: formattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), excerpt && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-content\",\n          children: excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const actions = _.get(section, 'actions');\n\n    const colNumber = _.get(section, 'col_number', 'three');\n\n    const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n    const postsNumber = _.get(section, 'posts_number', 3);\n\n    const recentPosts = posts.slice(0, postsNumber);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"block block-posts outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header inner-sm\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"block-title line-top\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 39\n          }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"block-subtitle\",\n            children: htmlToReact(subtitle)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('post-feed', 'grid', {\n              'grid-col-2': colNumber === 'two',\n              'grid-col-3': colNumber === 'three'\n            }),\n            children: _.map(recentPosts, (post, index) => this.renderPost(post, index))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-buttons inner-sm\",\n          children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n            actions: actions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionPosts.js"],"names":["React","_","moment","getPageUrl","htmlToReact","classNames","Link","withPrefix","CtaButtons","SectionPosts","Component","renderPost","post","index","title","get","thumbImage","thumbImageAlt","excerpt","date","dateTimeAttr","strftime","formattedDate","postUrl","render","section","props","sectionId","subtitle","actions","colNumber","posts","orderBy","postsNumber","recentPosts","slice","map","isEmpty"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,IAA9C,EAAoDC,UAApD,QAAsE,UAAtE;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,MAAMC,YAAN,SAA2BT,KAAK,CAACU,SAAjC,CAA2C;AACtDC,EAAAA,UAAU,CAACC,IAAD,EAAOC,KAAP,EAAc;AACpB,UAAMC,KAAK,GAAGb,CAAC,CAACc,GAAF,CAAMH,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAMI,UAAU,GAAGf,CAAC,CAACc,GAAF,CAAMH,IAAN,EAAY,aAAZ,CAAnB;;AACA,UAAMK,aAAa,GAAGhB,CAAC,CAACc,GAAF,CAAMH,IAAN,EAAY,iBAAZ,EAA+B,EAA/B,CAAtB;;AACA,UAAMM,OAAO,GAAGjB,CAAC,CAACc,GAAF,CAAMH,IAAN,EAAY,SAAZ,CAAhB;;AACA,UAAMO,IAAI,GAAGlB,CAAC,CAACc,GAAF,CAAMH,IAAN,EAAY,MAAZ,CAAb;;AACA,UAAMQ,YAAY,GAAGlB,MAAM,CAACiB,IAAD,CAAN,CAAaE,QAAb,CAAsB,gBAAtB,CAArB;AACA,UAAMC,aAAa,GAAGpB,MAAM,CAACiB,IAAD,CAAN,CAAaE,QAAb,CAAsB,WAAtB,CAAtB;AACA,UAAME,OAAO,GAAGpB,UAAU,CAACS,IAAD,EAAO;AAAEL,MAAAA,UAAU,EAAE;AAAd,KAAP,CAA1B;AAEA,wBACI;AAAqB,MAAA,SAAS,EAAC,gBAA/B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACKS,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAiC,UAAA,IAAI,EAAEO,OAAvC;AAAA,iCAAgD;AAAK,YAAA,GAAG,EAAEhB,UAAU,CAACS,UAAD,CAApB;AAAkC,YAAA,GAAG,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADnB,eAEI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,mCAA2B,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEM,OAAZ;AAAA,wBAAsBT;AAAtB;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAM,cAAA,SAAS,EAAC,WAAhB;AAA4B,cAAA,QAAQ,EAAEM,YAAtC;AAAA,wBAAqDE;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAQKJ,OAAO,iBAAI;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA,oBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,gBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,OAAcL,KAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAGxB,CAAC,CAACc,GAAF,CAAM,KAAKW,KAAX,EAAkB,SAAlB,CAAhB;;AACA,UAAMC,SAAS,GAAG1B,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,YAAf,CAAlB;;AACA,UAAMX,KAAK,GAAGb,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,OAAf,CAAd;;AACA,UAAMG,QAAQ,GAAG3B,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,UAAf,CAAjB;;AACA,UAAMI,OAAO,GAAG5B,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,SAAf,CAAhB;;AACA,UAAMK,SAAS,GAAG7B,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,YAAf,EAA6B,OAA7B,CAAlB;;AACA,UAAMM,KAAK,GAAG9B,CAAC,CAAC+B,OAAF,CAAU/B,CAAC,CAACc,GAAF,CAAM,KAAKW,KAAX,EAAkB,OAAlB,EAA2B,EAA3B,CAAV,EAA0C,MAA1C,EAAkD,MAAlD,CAAd;;AACA,UAAMO,WAAW,GAAGhC,CAAC,CAACc,GAAF,CAAMU,OAAN,EAAe,cAAf,EAA+B,CAA/B,CAApB;;AACA,UAAMS,WAAW,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeF,WAAf,CAApB;AAEA,wBACI;AAAS,MAAA,EAAE,EAAEN,SAAb;AAAwB,MAAA,SAAS,EAAC,yBAAlC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,mBACK,CAACb,KAAK,IAAIc,QAAV,kBACG;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,qBACKd,KAAK,iBAAI;AAAI,YAAA,SAAS,EAAC,sBAAd;AAAA,sBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADd,EAEKc,QAAQ,iBAAI;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA,sBAA+BxB,WAAW,CAACwB,QAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAOI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AACI,YAAA,SAAS,EAAEvB,UAAU,CAAC,WAAD,EAAc,MAAd,EAAsB;AACvC,4BAAcyB,SAAS,KAAK,KADW;AAEvC,4BAAcA,SAAS,KAAK;AAFW,aAAtB,CADzB;AAAA,sBAMK7B,CAAC,CAACmC,GAAF,CAAMF,WAAN,EAAmB,CAACtB,IAAD,EAAOC,KAAP,KAAiB,KAAKF,UAAL,CAAgBC,IAAhB,EAAsBC,KAAtB,CAApC;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAiBK,CAACZ,CAAC,CAACoC,OAAF,CAAUR,OAAV,CAAD,iBACG;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AAjEqD","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { getPageUrl, htmlToReact, classNames, Link, withPrefix } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nexport default class SectionPosts extends React.Component {\n    renderPost(post, index) {\n        const title = _.get(post, 'title');\n        const thumbImage = _.get(post, 'thumb_image');\n        const thumbImageAlt = _.get(post, 'thumb_image_alt', '');\n        const excerpt = _.get(post, 'excerpt');\n        const date = _.get(post, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%B %d, %Y');\n        const postUrl = getPageUrl(post, { withPrefix: true });\n\n        return (\n            <article key={index} className=\"post grid-item\">\n                <div className=\"post-inside\">\n                    {thumbImage && <Link className=\"post-thumbnail\" href={postUrl}><img src={withPrefix(thumbImage)} alt={thumbImageAlt} /></Link>}\n                    <header className=\"post-header\">\n                        <h3 className=\"post-title\"><Link href={postUrl}>{title}</Link></h3>\n                        <div className=\"post-meta\">\n                            <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                        </div>\n                    </header>\n                    {excerpt && <p className=\"post-content\">{excerpt}</p>}\n                </div>\n            </article>\n        );\n    }\n\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const actions = _.get(section, 'actions');\n        const colNumber = _.get(section, 'col_number', 'three');\n        const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n        const postsNumber = _.get(section, 'posts_number', 3);\n        const recentPosts = posts.slice(0, postsNumber);\n\n        return (\n            <section id={sectionId} className=\"block block-posts outer\">\n                <div className=\"inner\">\n                    {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    <div className=\"block-content\">\n                        <div\n                            className={classNames('post-feed', 'grid', {\n                                'grid-col-2': colNumber === 'two',\n                                'grid-col-3': colNumber === 'three'\n                            })}\n                        >\n                            {_.map(recentPosts, (post, index) => this.renderPost(post, index))}\n                        </div>\n                    </div>\n                    {!_.isEmpty(actions) && (\n                        <div className=\"block-buttons inner-sm\">\n                            <CtaButtons actions={actions} />\n                        </div>\n                    )}\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}