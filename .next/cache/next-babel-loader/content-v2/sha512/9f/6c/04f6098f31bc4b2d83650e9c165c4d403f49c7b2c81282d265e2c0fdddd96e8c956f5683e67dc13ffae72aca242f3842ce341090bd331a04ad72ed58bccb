{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andiparo/andiparodi/blogPersonal/andiBlog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/andiparo/andiparodi/blogPersonal/andiBlog/src/layouts/post.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { Layout } from '../components/index';\nimport { htmlToReact, withPrefix, markdownify } from '../utils';\n\nvar Post = /*#__PURE__*/function (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  var _super = _createSuper(Post);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      var data = _.get(this.props, 'data');\n\n      var config = _.get(data, 'config');\n\n      var page = _.get(this.props, 'page');\n\n      var title = _.get(page, 'title');\n\n      var subtitle = _.get(page, 'subtitle');\n\n      var image = _.get(page, 'image');\n\n      var imageAlt = _.get(page, 'image_alt', '');\n\n      var date = _.get(page, 'date');\n\n      var dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n      var formattedDate = moment(date).strftime('%A, %B %e, %Y');\n\n      var markdownContent = _.get(page, 'markdown_content');\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        page: page,\n        config: config,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner outer\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            className: \"post post-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"post-header inner-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"post-title line-top\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, this), subtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subtitle\",\n                children: htmlToReact(subtitle)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: withPrefix(image),\n                alt: imageAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), markdownContent && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-content inner-sm\",\n              children: markdownify(markdownContent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"post-meta inner-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"time\", {\n                className: \"published\",\n                dateTime: dateTimeAttr,\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport { Post as default };","map":{"version":3,"sources":["/home/andiparo/andiparodi/blogPersonal/andiBlog/src/layouts/post.js"],"names":["React","_","moment","Layout","htmlToReact","withPrefix","markdownify","Post","data","get","props","config","page","title","subtitle","image","imageAlt","date","dateTimeAttr","strftime","formattedDate","markdownContent","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,WAAlC,QAAqD,UAArD;;IAEqBC,I;;;;;;;;;;;;;6BACR;AACL,UAAMC,IAAI,GAAGP,CAAC,CAACQ,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMC,MAAM,GAAGV,CAAC,CAACQ,GAAF,CAAMD,IAAN,EAAY,QAAZ,CAAf;;AACA,UAAMI,IAAI,GAAGX,CAAC,CAACQ,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMG,KAAK,GAAGZ,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAME,QAAQ,GAAGb,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,UAAZ,CAAjB;;AACA,UAAMG,KAAK,GAAGd,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAMI,QAAQ,GAAGf,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,WAAZ,EAAyB,EAAzB,CAAjB;;AACA,UAAMK,IAAI,GAAGhB,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,MAAZ,CAAb;;AACA,UAAMM,YAAY,GAAGhB,MAAM,CAACe,IAAD,CAAN,CAAaE,QAAb,CAAsB,gBAAtB,CAArB;AACA,UAAMC,aAAa,GAAGlB,MAAM,CAACe,IAAD,CAAN,CAAaE,QAAb,CAAsB,eAAtB,CAAtB;;AACA,UAAME,eAAe,GAAGpB,CAAC,CAACQ,GAAF,CAAMG,IAAN,EAAY,kBAAZ,CAAxB;;AAEA,0BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA,IAAd;AAAoB,QAAA,MAAM,EAAED,MAA5B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAS,YAAA,SAAS,EAAC,gBAAnB;AAAA,oCACI;AAAQ,cAAA,SAAS,EAAC,sBAAlB;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,qBAAd;AAAA,0BAAqCE;AAArC;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKC,QAAQ,iBAAI;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,0BAAgCV,WAAW,CAACU,QAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,sBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAKKC,KAAK,iBACF;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAEV,UAAU,CAACU,KAAD,CAApB;AAA6B,gBAAA,GAAG,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANR,EAUKK,eAAe,iBAAI;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,wBAAwCf,WAAW,CAACe,eAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAVxB,eAWI;AAAQ,cAAA,SAAS,EAAC,oBAAlB;AAAA,qCACI;AAAM,gBAAA,SAAS,EAAC,WAAhB;AAA4B,gBAAA,QAAQ,EAAEH,YAAtC;AAAA,0BAAqDE;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAqBH;;;;EAnC6BpB,KAAK,CAACsB,S;;SAAnBf,I","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { Layout } from '../components/index';\nimport { htmlToReact, withPrefix, markdownify } from '../utils';\n\nexport default class Post extends React.Component {\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const page = _.get(this.props, 'page');\n        const title = _.get(page, 'title');\n        const subtitle = _.get(page, 'subtitle');\n        const image = _.get(page, 'image');\n        const imageAlt = _.get(page, 'image_alt', '');\n        const date = _.get(page, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%A, %B %e, %Y');\n        const markdownContent = _.get(page, 'markdown_content');\n\n        return (\n            <Layout page={page} config={config}>\n                <div className=\"inner outer\">\n                    <article className=\"post post-full\">\n                        <header className=\"post-header inner-sm\">\n                            <h1 className=\"post-title line-top\">{title}</h1>\n                            {subtitle && <div className=\"post-subtitle\">{htmlToReact(subtitle)}</div>}\n                        </header>\n                        {image && (\n                            <div className=\"post-image\">\n                                <img src={withPrefix(image)} alt={imageAlt} />\n                            </div>\n                        )}\n                        {markdownContent && <div className=\"post-content inner-sm\">{markdownify(markdownContent)}</div>}\n                        <footer className=\"post-meta inner-sm\">\n                            <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                        </footer>\n                    </article>\n                </div>\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}