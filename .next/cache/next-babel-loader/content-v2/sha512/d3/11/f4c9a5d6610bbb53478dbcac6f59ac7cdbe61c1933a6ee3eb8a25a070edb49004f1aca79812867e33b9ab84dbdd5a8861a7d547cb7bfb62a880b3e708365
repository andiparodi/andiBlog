{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/SectionGrid.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { htmlToReact, classNames, withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\nexport default class SectionGrid extends React.Component {\n  renderGridItem(gridItem, index, isNumbered) {\n    const title = _.get(gridItem, 'title');\n\n    const content = _.get(gridItem, 'content');\n\n    const image = _.get(gridItem, 'image');\n\n    const imageAlt = _.get(gridItem, 'image_alt', '');\n\n    const actions = _.get(gridItem, 'actions');\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      children: [isNumbered && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"grid-item-counter\",\n        \"aria-hidden\": \"true\",\n        children: [index + 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 32\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: withPrefix(image),\n          alt: imageAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), title && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"grid-item-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-content\",\n        children: markdownify(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item-buttons\",\n        children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n          actions: actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const gridItems = _.get(section, 'grid_items');\n\n    const colNumber = _.get(section, 'col_number', 'three');\n\n    const isNumbered = _.get(section, 'is_numbered');\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"block block-grid outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header inner-sm\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"block-title line-top\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 39\n          }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"block-subtitle\",\n            children: htmlToReact(subtitle)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), !_.isEmpty(gridItems) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('grid', {\n              'grid-col-2': colNumber === 'two',\n              'grid-col-3': colNumber === 'three'\n            }),\n            children: _.map(gridItems, (gridItem, index) => this.renderGridItem(gridItem, index, isNumbered))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/andiparo/andiparodi/blogPersonal/andiBlog/src/components/SectionGrid.js"],"names":["React","_","htmlToReact","classNames","withPrefix","markdownify","CtaButtons","SectionGrid","Component","renderGridItem","gridItem","index","isNumbered","title","get","content","image","imageAlt","actions","isEmpty","render","section","props","sectionId","subtitle","gridItems","colNumber","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { htmlToReact, classNames, withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nexport default class SectionGrid extends React.Component {\n    renderGridItem(gridItem, index, isNumbered) {\n        const title = _.get(gridItem, 'title');\n        const content = _.get(gridItem, 'content');\n        const image = _.get(gridItem, 'image');\n        const imageAlt = _.get(gridItem, 'image_alt', '');\n        const actions = _.get(gridItem, 'actions');\n\n        return (\n            <div key={index} className=\"grid-item\">\n                {isNumbered && <span className=\"grid-item-counter\" aria-hidden=\"true\">{index + 1}.</span>}\n                {image && (\n                    <div className=\"grid-item-image\">\n                        <img src={withPrefix(image)} alt={imageAlt} />\n                    </div>\n                )}\n                {title && <h3 className=\"grid-item-title\">{title}</h3>}\n                {content && (\n                    <div className=\"grid-item-content\">\n                        {markdownify(content)}\n                    </div>\n                )}\n                {!_.isEmpty(actions) && (\n                    <div className=\"grid-item-buttons\">\n                        <CtaButtons actions={actions} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const gridItems = _.get(section, 'grid_items');\n        const colNumber = _.get(section, 'col_number', 'three');\n        const isNumbered = _.get(section, 'is_numbered');\n\n        return (\n            <section id={sectionId} className=\"block block-grid outer\">\n                <div className=\"inner\">\n                    {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    {!_.isEmpty(gridItems) && (\n                        <div className=\"block-content\">\n                            <div\n                                className={classNames('grid', {\n                                    'grid-col-2': colNumber === 'two',\n                                    'grid-col-3': colNumber === 'three'\n                                })}\n                            >\n                                {_.map(gridItems, (gridItem, index) => this.renderGridItem(gridItem, index, isNumbered))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}