{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/pages/_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { Helmet } from 'react-helmet';\nimport { withPrefix } from '../utils';\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const initialProps = await Document.getInitialProps(ctx); // see https://github.com/nfl/react-helmet#server-usage for more information\n    // 'head' was occupied by 'renderPage().head', we cannot use it\n\n    return _objectSpread(_objectSpread({}, initialProps), {}, {\n      helmet: Helmet.renderStatic()\n    });\n  } // should render on <html>\n\n\n  get helmetHtmlAttrComponents() {\n    return this.props.helmet.htmlAttributes.toComponent();\n  } // should render on <body>\n\n\n  get helmetBodyAttrComponents() {\n    return this.props.helmet.bodyAttributes.toComponent();\n  } // should render on <head>\n\n\n  get helmetHeadComponents() {\n    return Object.keys(this.props.helmet).filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes').map(el => this.props.helmet[el].toComponent());\n  }\n\n  render() {\n    // if you don't like Helmet but you still want to set properties on body use this\n    // const pageProps = _.get(this.props, '__NEXT_DATA__.props.pageProps');\n    return /*#__PURE__*/_jsxDEV(Html, _objectSpread(_objectSpread({}, this.helmetHtmlAttrComponents), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: this.helmetHeadComponents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", _objectSpread(_objectSpread({}, this.helmetBodyAttrComponents), {}, {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: withPrefix('js/plugins.js')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","Helmet","withPrefix","MyDocument","getInitialProps","ctx","initialProps","helmet","renderStatic","helmetHtmlAttrComponents","props","htmlAttributes","toComponent","helmetBodyAttrComponents","bodyAttributes","helmetHeadComponents","Object","keys","filter","el","map","render"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,eAAe,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAC7C,eAAaQ,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACQ,eAAT,CAAyBC,GAAzB,CAA3B,CAD8B,CAE9B;AACA;;AACA,2CAAYC,YAAZ;AAA0BC,MAAAA,MAAM,EAAEN,MAAM,CAACO,YAAP;AAAlC;AACH,GAN4C,CAQ7C;;;AACA,MAAIC,wBAAJ,GAA+B;AAC3B,WAAO,KAAKC,KAAL,CAAWH,MAAX,CAAkBI,cAAlB,CAAiCC,WAAjC,EAAP;AACH,GAX4C,CAa7C;;;AACA,MAAIC,wBAAJ,GAA+B;AAC3B,WAAO,KAAKH,KAAL,CAAWH,MAAX,CAAkBO,cAAlB,CAAiCF,WAAjC,EAAP;AACH,GAhB4C,CAkB7C;;;AACA,MAAIG,oBAAJ,GAA2B;AACvB,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWH,MAAvB,EACFW,MADE,CACMC,EAAD,IAAQA,EAAE,KAAK,gBAAP,IAA2BA,EAAE,KAAK,gBAD/C,EAEFC,GAFE,CAEGD,EAAD,IAAQ,KAAKT,KAAL,CAAWH,MAAX,CAAkBY,EAAlB,EAAsBP,WAAtB,EAFV,CAAP;AAGH;;AAEDS,EAAAA,MAAM,GAAG;AACL;AACA;AACA,wBACI,QAAC,IAAD,kCAAU,KAAKZ,wBAAf;AAAA,8BACI,QAAC,IAAD;AAAA,kBAAO,KAAKM;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,gDAAU,KAAKF,wBAAf;AAAA,gCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,GAAG,EAAEX,UAAU,CAAC,eAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAtC4C","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { Helmet } from 'react-helmet';\nimport { withPrefix } from '../utils';\n\nexport default class MyDocument extends Document {\n    static async getInitialProps(ctx) {\n        const initialProps = await Document.getInitialProps(ctx);\n        // see https://github.com/nfl/react-helmet#server-usage for more information\n        // 'head' was occupied by 'renderPage().head', we cannot use it\n        return { ...initialProps, helmet: Helmet.renderStatic() };\n    }\n\n    // should render on <html>\n    get helmetHtmlAttrComponents() {\n        return this.props.helmet.htmlAttributes.toComponent();\n    }\n\n    // should render on <body>\n    get helmetBodyAttrComponents() {\n        return this.props.helmet.bodyAttributes.toComponent();\n    }\n\n    // should render on <head>\n    get helmetHeadComponents() {\n        return Object.keys(this.props.helmet)\n            .filter((el) => el !== 'htmlAttributes' && el !== 'bodyAttributes')\n            .map((el) => this.props.helmet[el].toComponent());\n    }\n\n    render() {\n        // if you don't like Helmet but you still want to set properties on body use this\n        // const pageProps = _.get(this.props, '__NEXT_DATA__.props.pageProps');\n        return (\n            <Html {...this.helmetHtmlAttrComponents}>\n                <Head>{this.helmetHeadComponents}</Head>\n                <body {...this.helmetBodyAttrComponents}>\n                    <Main />\n                    <script src={withPrefix('js/plugins.js')} />\n                    <NextScript />\n                </body>\n            </Html>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}