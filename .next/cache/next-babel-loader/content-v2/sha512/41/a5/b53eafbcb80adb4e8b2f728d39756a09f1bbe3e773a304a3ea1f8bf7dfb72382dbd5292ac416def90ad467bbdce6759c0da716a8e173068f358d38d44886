{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionPosts.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport { getPageUrl, htmlToReact, classNames, Link, withPrefix } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nvar SectionPosts = /*#__PURE__*/function (_React$Component) {\n  _inherits(SectionPosts, _React$Component);\n\n  var _super = _createSuper(SectionPosts);\n\n  function SectionPosts() {\n    _classCallCheck(this, SectionPosts);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SectionPosts, [{\n    key: \"renderPost\",\n    value: function renderPost(post, index) {\n      var title = _.get(post, 'title');\n\n      var thumbImage = _.get(post, 'thumb_image');\n\n      var thumbImageAlt = _.get(post, 'thumb_image_alt', '');\n\n      var excerpt = _.get(post, 'excerpt');\n\n      var date = _.get(post, 'date');\n\n      var dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n      var formattedDate = moment(date).strftime('%B %d, %Y');\n      var postUrl = getPageUrl(post, {\n        withPrefix: true\n      });\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post grid-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-inside\",\n          children: [thumbImage && /*#__PURE__*/_jsxDEV(Link, {\n            className: \"post-thumbnail\",\n            href: postUrl,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: withPrefix(thumbImage),\n              alt: thumbImageAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 84\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"post-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"post-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: postUrl,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-meta\",\n              children: /*#__PURE__*/_jsxDEV(\"time\", {\n                className: \"published\",\n                dateTime: dateTimeAttr,\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), excerpt && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-content\",\n            children: excerpt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var section = _.get(this.props, 'section');\n\n      var sectionId = _.get(section, 'section_id');\n\n      var title = _.get(section, 'title');\n\n      var subtitle = _.get(section, 'subtitle');\n\n      var actions = _.get(section, 'actions');\n\n      var colNumber = _.get(section, 'col_number', 'three');\n\n      var posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n\n      var postsNumber = _.get(section, 'posts_number', 3);\n\n      var recentPosts = posts.slice(0, postsNumber);\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: sectionId,\n        className: \"block block-posts outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header inner-sm\",\n            children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"block-title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 39\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"block-subtitle\",\n              children: htmlToReact(subtitle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('post-feed', 'grid', {\n                'grid-col-2': colNumber === 'two',\n                'grid-col-3': colNumber === 'three'\n              }),\n              children: _.map(recentPosts, function (post, index) {\n                return _this.renderPost(post, index);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-buttons inner-sm\",\n            children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n              actions: actions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SectionPosts;\n}(React.Component);\n\nexport { SectionPosts as default };","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionPosts.js"],"names":["React","_","moment","getPageUrl","htmlToReact","classNames","Link","withPrefix","CtaButtons","SectionPosts","post","index","title","get","thumbImage","thumbImageAlt","excerpt","date","dateTimeAttr","strftime","formattedDate","postUrl","section","props","sectionId","subtitle","actions","colNumber","posts","orderBy","postsNumber","recentPosts","slice","map","renderPost","isEmpty","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\n\nimport { getPageUrl, htmlToReact, classNames, Link, withPrefix } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nexport default class SectionPosts extends React.Component {\n    renderPost(post, index) {\n        const title = _.get(post, 'title');\n        const thumbImage = _.get(post, 'thumb_image');\n        const thumbImageAlt = _.get(post, 'thumb_image_alt', '');\n        const excerpt = _.get(post, 'excerpt');\n        const date = _.get(post, 'date');\n        const dateTimeAttr = moment(date).strftime('%Y-%m-%d %H:%M');\n        const formattedDate = moment(date).strftime('%B %d, %Y');\n        const postUrl = getPageUrl(post, { withPrefix: true });\n\n        return (\n            <article key={index} className=\"post grid-item\">\n                <div className=\"post-inside\">\n                    {thumbImage && <Link className=\"post-thumbnail\" href={postUrl}><img src={withPrefix(thumbImage)} alt={thumbImageAlt} /></Link>}\n                    <header className=\"post-header\">\n                        <h3 className=\"post-title\"><Link href={postUrl}>{title}</Link></h3>\n                        <div className=\"post-meta\">\n                            <time className=\"published\" dateTime={dateTimeAttr}>{formattedDate}</time>\n                        </div>\n                    </header>\n                    {excerpt && <p className=\"post-content\">{excerpt}</p>}\n                </div>\n            </article>\n        );\n    }\n\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const actions = _.get(section, 'actions');\n        const colNumber = _.get(section, 'col_number', 'three');\n        const posts = _.orderBy(_.get(this.props, 'posts', []), 'date', 'desc');\n        const postsNumber = _.get(section, 'posts_number', 3);\n        const recentPosts = posts.slice(0, postsNumber);\n\n        return (\n            <section id={sectionId} className=\"block block-posts outer\">\n                <div className=\"inner\">\n                    {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    <div className=\"block-content\">\n                        <div\n                            className={classNames('post-feed', 'grid', {\n                                'grid-col-2': colNumber === 'two',\n                                'grid-col-3': colNumber === 'three'\n                            })}\n                        >\n                            {_.map(recentPosts, (post, index) => this.renderPost(post, index))}\n                        </div>\n                    </div>\n                    {!_.isEmpty(actions) && (\n                        <div className=\"block-buttons inner-sm\">\n                            <CtaButtons actions={actions} />\n                        </div>\n                    )}\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}