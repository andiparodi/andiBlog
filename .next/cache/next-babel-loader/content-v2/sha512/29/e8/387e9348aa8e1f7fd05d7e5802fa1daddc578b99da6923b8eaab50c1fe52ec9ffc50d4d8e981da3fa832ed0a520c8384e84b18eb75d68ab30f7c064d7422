{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { htmlToReact, markdownify } from '../utils';\nimport FormField from './FormField';\nexport default class SectionForm extends React.Component {\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const subtitle = _.get(section, 'subtitle');\n\n    const content = _.get(section, 'content');\n\n    const formId = _.get(section, 'form_id');\n\n    const formAction = _.get(section, 'form_action');\n\n    const formFields = _.get(section, 'form_fields');\n\n    const submitLabel = _.get(section, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"block block-form outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-header inner-sm\",\n          children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"block-title line-top\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 39\n          }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"block-subtitle\",\n            children: htmlToReact(subtitle)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content inner-sm\",\n          children: [content && markdownify(content), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n            name: formId,\n            id: formId\n          }, formAction ? {\n            action: formAction\n          } : null), {}, {\n            method: \"POST\",\n            \"data-netlify\": \"true\",\n            \"data-netlify-honeypot\": formHoneypotName,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"screen-reader-text\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                id: formHoneypotLabelId,\n                htmlFor: formHoneypotInputId,\n                children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  \"aria-labelledby\": formHoneypotLabelId,\n                  id: formHoneypotInputId,\n                  name: formHoneypotName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"form-name\",\n              value: formId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), _.map(formFields, (field, index) => /*#__PURE__*/_jsxDEV(FormField, _objectSpread(_objectSpread({}, this.props), {}, {\n              field: field\n            }), index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 66\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-submit\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"button\",\n                children: submitLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }), void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionForm.js"],"names":["React","_","htmlToReact","markdownify","FormField","SectionForm","Component","render","section","get","props","sectionId","title","subtitle","content","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { htmlToReact, markdownify } from '../utils';\nimport FormField from './FormField';\n\nexport default class SectionForm extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const content = _.get(section, 'content');\n        const formId = _.get(section, 'form_id');\n        const formAction = _.get(section, 'form_action');\n        const formFields = _.get(section, 'form_fields');\n        const submitLabel = _.get(section, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <section id={sectionId} className=\"block block-form outer\">\n                <div className=\"inner\">\n                {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    <div className=\"block-content inner-sm\">\n                        {content && markdownify(content)}\n                        <form\n                            name={formId}\n                            id={formId}\n                            {...(formAction ? ({ action: formAction }) : null)}\n                            method=\"POST\"\n                            data-netlify=\"true\"\n                            data-netlify-honeypot={formHoneypotName}\n                        >\n                            <div className=\"screen-reader-text\">\n                                <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                    Don't fill this out if you're human:\n                                    <input aria-labelledby={formHoneypotLabelId} id={formHoneypotInputId} name={formHoneypotName} />\n                                </label>\n                            </div>\n                            <input type=\"hidden\" name=\"form-name\" value={formId} />\n                            {_.map(formFields, (field, index) => <FormField key={index} {...this.props} field={field} />)}\n                            <div className=\"form-submit\">\n                                <button type=\"submit\" className=\"button\">{submitLabel}</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}