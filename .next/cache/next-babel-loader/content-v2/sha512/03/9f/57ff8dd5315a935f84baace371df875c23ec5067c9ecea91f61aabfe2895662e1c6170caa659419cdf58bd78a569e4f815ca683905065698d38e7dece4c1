{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/utils/htmlToReact.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactHtmlParser, { convertNodeToElement } from 'react-html-parser';\nimport ScriptTag from 'react-script-tag';\nimport Link from './link';\nimport _ from 'lodash';\n\nconst convertChildren = (children, index) => _.map(children, childNode => convertNodeToElement(childNode, index, _.noop()));\n\nexport default function htmlToReact(html) {\n  if (!html) {\n    return null;\n  }\n\n  return ReactHtmlParser(html, {\n    transform: (node, index) => {\n      if (node.type === 'script') {\n        if (!_.isEmpty(node.children)) {\n          return /*#__PURE__*/_jsxDEV(ScriptTag, _objectSpread(_objectSpread({}, node.attribs), {}, {\n            children: convertChildren(node.children, index)\n          }), index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(ScriptTag, _objectSpread({}, node.attribs), index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 28\n          }, this);\n        }\n      } else if (node.type === 'tag' && node.name === 'a') {\n        const href = node.attribs.href;\n\n        const props = _.omit(node.attribs, 'href'); // use Link only if there are no custom attributes like style, class, and what's not that might break react\n\n\n        if (_.isEmpty(props)) {\n          return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({\n            href: href\n          }, props), {}, {\n            children: convertChildren(node.children, index)\n          }), index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this);\n        }\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/utils/htmlToReact.js"],"names":["React","ReactHtmlParser","convertNodeToElement","ScriptTag","Link","_","convertChildren","children","index","map","childNode","noop","htmlToReact","html","transform","node","type","isEmpty","attribs","name","href","props","omit"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,IAA0BC,oBAA1B,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqBH,CAAC,CAACI,GAAF,CAAMF,QAAN,EAAiBG,SAAD,IAAeR,oBAAoB,CAACQ,SAAD,EAAYF,KAAZ,EAAmBH,CAAC,CAACM,IAAF,EAAnB,CAAnD,CAA7C;;AAEA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACtC,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AACD,SAAOZ,eAAe,CAACY,IAAD,EAAO;AACzBC,IAAAA,SAAS,EAAE,CAACC,IAAD,EAAOP,KAAP,KAAiB;AACxB,UAAIO,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AACxB,YAAI,CAACX,CAAC,CAACY,OAAF,CAAUF,IAAI,CAACR,QAAf,CAAL,EAA+B;AAC3B,8BACI,QAAC,SAAD,kCAA2BQ,IAAI,CAACG,OAAhC;AAAA,sBACKZ,eAAe,CAACS,IAAI,CAACR,QAAN,EAAgBC,KAAhB;AADpB,cAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND,MAMO;AACH,8BAAO,QAAC,SAAD,oBAA2BO,IAAI,CAACG,OAAhC,GAAgBV,KAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AACJ,OAVD,MAUO,IAAIO,IAAI,CAACC,IAAL,KAAc,KAAd,IAAuBD,IAAI,CAACI,IAAL,KAAc,GAAzC,EAA8C;AACjD,cAAMC,IAAI,GAAGL,IAAI,CAACG,OAAL,CAAaE,IAA1B;;AACA,cAAMC,KAAK,GAAGhB,CAAC,CAACiB,IAAF,CAAOP,IAAI,CAACG,OAAZ,EAAqB,MAArB,CAAd,CAFiD,CAGjD;;;AACA,YAAIb,CAAC,CAACY,OAAF,CAAUI,KAAV,CAAJ,EAAsB;AAClB,8BACI,QAAC,IAAD;AAAkB,YAAA,IAAI,EAAED;AAAxB,aAAkCC,KAAlC;AAAA,sBACKf,eAAe,CAACS,IAAI,CAACR,QAAN,EAAgBC,KAAhB;AADpB,cAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH;AACJ;AACJ;AAxBwB,GAAP,CAAtB;AA0BH","sourcesContent":["import React from 'react';\nimport ReactHtmlParser, { convertNodeToElement } from 'react-html-parser';\nimport ScriptTag from 'react-script-tag';\nimport Link from './link';\nimport _ from 'lodash';\n\nconst convertChildren = (children, index) => _.map(children, (childNode) => convertNodeToElement(childNode, index, _.noop()));\n\nexport default function htmlToReact(html) {\n    if (!html) {\n        return null;\n    }\n    return ReactHtmlParser(html, {\n        transform: (node, index) => {\n            if (node.type === 'script') {\n                if (!_.isEmpty(node.children)) {\n                    return (\n                        <ScriptTag key={index} {...node.attribs}>\n                            {convertChildren(node.children, index)}\n                        </ScriptTag>\n                    );\n                } else {\n                    return <ScriptTag key={index} {...node.attribs} />;\n                }\n            } else if (node.type === 'tag' && node.name === 'a') {\n                const href = node.attribs.href;\n                const props = _.omit(node.attribs, 'href');\n                // use Link only if there are no custom attributes like style, class, and what's not that might break react\n                if (_.isEmpty(props)) {\n                    return (\n                        <Link key={index} href={href} {...props}>\n                            {convertChildren(node.children, index)}\n                        </Link>\n                    );\n                }\n            }\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}