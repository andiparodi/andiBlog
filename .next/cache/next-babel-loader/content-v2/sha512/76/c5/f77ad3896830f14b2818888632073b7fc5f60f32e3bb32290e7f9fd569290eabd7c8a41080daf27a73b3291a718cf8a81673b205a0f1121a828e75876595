{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andiparo/personalProjects/blog/andiBlog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionGrid.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { htmlToReact, classNames, withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nvar SectionGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(SectionGrid, _React$Component);\n\n  var _super = _createSuper(SectionGrid);\n\n  function SectionGrid() {\n    _classCallCheck(this, SectionGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SectionGrid, [{\n    key: \"renderGridItem\",\n    value: function renderGridItem(gridItem, index, isNumbered) {\n      var title = _.get(gridItem, 'title');\n\n      var content = _.get(gridItem, 'content');\n\n      var image = _.get(gridItem, 'image');\n\n      var imageAlt = _.get(gridItem, 'image_alt', '');\n\n      var actions = _.get(gridItem, 'actions');\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        children: [isNumbered && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"grid-item-counter\",\n          \"aria-hidden\": \"true\",\n          children: [index + 1, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 32\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: withPrefix(image),\n            alt: imageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), title && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"grid-item-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 27\n        }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item-content\",\n          children: markdownify(content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item-buttons\",\n          children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n            actions: actions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var section = _.get(this.props, 'section');\n\n      var sectionId = _.get(section, 'section_id');\n\n      var title = _.get(section, 'title');\n\n      var subtitle = _.get(section, 'subtitle');\n\n      var gridItems = _.get(section, 'grid_items');\n\n      var colNumber = _.get(section, 'col_number', 'three');\n\n      var isNumbered = _.get(section, 'is_numbered');\n\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: sectionId,\n        className: \"block block-grid outer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [(title || subtitle) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-header inner-sm\",\n            children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"block-title line-top\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 39\n            }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"block-subtitle\",\n              children: htmlToReact(subtitle)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), !_.isEmpty(gridItems) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('grid', {\n                'grid-col-2': colNumber === 'two',\n                'grid-col-3': colNumber === 'three'\n              }),\n              children: _.map(gridItems, function (gridItem, index) {\n                return _this.renderGridItem(gridItem, index, isNumbered);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SectionGrid;\n}(React.Component);\n\nexport { SectionGrid as default };","map":{"version":3,"sources":["/home/andiparo/personalProjects/blog/andiBlog/src/components/SectionGrid.js"],"names":["React","_","htmlToReact","classNames","withPrefix","markdownify","CtaButtons","SectionGrid","gridItem","index","isNumbered","title","get","content","image","imageAlt","actions","isEmpty","section","props","sectionId","subtitle","gridItems","colNumber","map","renderGridItem","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { htmlToReact, classNames, withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nexport default class SectionGrid extends React.Component {\n    renderGridItem(gridItem, index, isNumbered) {\n        const title = _.get(gridItem, 'title');\n        const content = _.get(gridItem, 'content');\n        const image = _.get(gridItem, 'image');\n        const imageAlt = _.get(gridItem, 'image_alt', '');\n        const actions = _.get(gridItem, 'actions');\n\n        return (\n            <div key={index} className=\"grid-item\">\n                {isNumbered && <span className=\"grid-item-counter\" aria-hidden=\"true\">{index + 1}.</span>}\n                {image && (\n                    <div className=\"grid-item-image\">\n                        <img src={withPrefix(image)} alt={imageAlt} />\n                    </div>\n                )}\n                {title && <h3 className=\"grid-item-title\">{title}</h3>}\n                {content && (\n                    <div className=\"grid-item-content\">\n                        {markdownify(content)}\n                    </div>\n                )}\n                {!_.isEmpty(actions) && (\n                    <div className=\"grid-item-buttons\">\n                        <CtaButtons actions={actions} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const subtitle = _.get(section, 'subtitle');\n        const gridItems = _.get(section, 'grid_items');\n        const colNumber = _.get(section, 'col_number', 'three');\n        const isNumbered = _.get(section, 'is_numbered');\n\n        return (\n            <section id={sectionId} className=\"block block-grid outer\">\n                <div className=\"inner\">\n                    {(title || subtitle) && (\n                        <div className=\"block-header inner-sm\">\n                            {title && <h2 className=\"block-title line-top\">{title}</h2>}\n                            {subtitle && <p className=\"block-subtitle\">{htmlToReact(subtitle)}</p>}\n                        </div>\n                    )}\n                    {!_.isEmpty(gridItems) && (\n                        <div className=\"block-content\">\n                            <div\n                                className={classNames('grid', {\n                                    'grid-col-2': colNumber === 'two',\n                                    'grid-col-3': colNumber === 'three'\n                                })}\n                            >\n                                {_.map(gridItems, (gridItem, index) => this.renderGridItem(gridItem, index, isNumbered))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}